name: demo-api-charm
title: |
  demo-fastapi-k8s
description: |
  This is a demo charm built on top of a small Python FastAPI server.
  This charm could be related to PostgreSQL charm and COS Lite bundle (Canonical Observability Stack).
summary: |
  FastAPI Demo charm for Kubernetes


assumes: # softly enforces env contraints through 'best efforts'
  - juju >= 3.1
  - k8s-api

peers:
  fastapi-peer:
    interface: fastapi_demo_peers
comment: >
  peers:
    friend:
      interface: life
      limit: 150
      optional: true
      scope: container
  provides:
    self:
      interface: identity
  requires:
    parent:
      interface: birth
      limit: 2
      optional: false
      scope: global

comment: >
  This endpoint says that our charm is requesting a relation called database over an 
  interface called postgresql_client with a maximum number of supported connections of 1
requires:
  database:
    interface: postgresql_client
    limit: 1

containers:
  demo-server:
    resource: demo-server-image
comment: >
  containers:
    <container name>:
      resource: <resource name>
      bases:
        - name: <base name>
          channel: <track[/risk][/branch]>
          architectures:
            - <architecture>
      mounts:
        - storage: <storage name>
          location: <path>
      uid: <unix UID>
      gid: <unix GID>


resources:
  # An OCI image resource for each container listed above.
  # You may remove this if your charm will run without a workload sidecar container.
  demo-server-image:
    type: oci-image
    description: OCI image from GitHub Container Repository
    # The upstream-source field is ignored by Juju. It is included here as a reference
    # so the integration testing suite knows which image to deploy during testing. This field
    # is also used by the 'canonical/charming-actions' Github action for automated releasing.
    upstream-source: ghcr.io/canonical/api_demo_server:1.0.1


comment: >
  Now Describe all the information needed for Charmcraft to be able to pack your charm
type: charm
bases:
  - build-on:
    - name: ubuntu
      channel: "22.04"
    run-on:
    - name: ubuntu
      channel: "22.04"

comment: >
  Define configs for charm
config:
  options:
    server-port:
      default: 8000
      description: Default port on which FastAPI is available
      type: int
comment: >
  config:
    options:
      # Each option name is the name by which the charm will query the option.
      <option name>:
        # (Required) The type of the option
        type: string | int | float | boolean | secret
        # (Optional) The default value of the option
        default: <a reasonable default value of the same type as the option>
        # (Optional): A string describing the option. Also appears on charmhub.io
        description: <description string>

actions:
  get-db-info:
    description: Fetches Database authentication information
    params:
      show-password:
        description: "Show username and password in output information"
        type: boolean
        default: False
comment: >
  actions:
    snapshot:
      description: Take a snapshot of the database.
      params:
        filename:
          type: string
          description: The name of the snapshot file.
        compression:
          type: object
          description: The type of compression to use.
          properties:
            kind:
              type: string
              enum:
              - gzip
              - bzip2
              - xz
              default: gzip
            quality:
              description: Compression quality
              type: integer
              default: 5
              minimum: 0
              maximum: 9
      required:
      - filename
      additionalProperties: false
